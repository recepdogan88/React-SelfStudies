{"version":3,"file":"content-range.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["interface Range {\n  unit: string;\n  start?: number | null;\n  end?: number | null;\n  size?: number | null;\n}\n\n/**\n * Format Content-Range header.\n */\nexport function format(input: Range): string | null {\n  const size = input.size != null ? input.size : \"*\";\n  const range =\n    input.start == null && input.end == null\n      ? \"*\"\n      : `${input.start}-${input.end}`;\n  if (size === \"*\" && range === \"*\") return null;\n  if (range !== \"*\" && (input.start == null || input.end == null)) return null;\n  return `${input.unit} ${range}/${size}`;\n}\n\n/**\n * Parse Content-Range header.\n */\nexport function parse(input: string): Range | null {\n  const matches = input.match(/^(\\w+) ((\\d+)-(\\d+)|\\*)\\/(\\d+|\\*)$/);\n  if (!matches) return null;\n  const [, unit, , start, end, size] = matches;\n  const range = {\n    unit,\n    start: start != null ? Number(start) : null,\n    end: end != null ? Number(end) : null,\n    size: size === \"*\" ? null : Number(size),\n  };\n  if (range.start === null && range.end === null && range.size === null)\n    return null;\n  return range;\n}\n"],"names":["input","size","range","start","end","unit","matches","match","Number"],"mappings":"4FAUuBA,OACfC,EAAqB,MAAdD,EAAMC,KAAeD,EAAMC,KAAO,IACzCC,EACW,MAAfF,EAAMG,OAA8B,MAAbH,EAAMI,IACzB,IACGJ,EAAMG,UAASH,EAAMI,UACjB,MAATH,GAA0B,MAAVC,EAAsB,KAC5B,MAAVA,GAAiC,MAAfF,EAAMG,OAA8B,MAAbH,EAAMI,IACzCJ,EAAMK,SAAQH,MAASD,EADuC,6BAOpDD,OACdM,EAAUN,EAAMO,MAAM,0CACvBD,EAAS,OAAO,SACJH,EAAoBG,KAAbF,EAAaE,KAARL,EAAQK,KAC/BJ,EAAQ,CACZG,KAFmCC,KAGnCH,MAAgB,MAATA,EAAgBK,OAAOL,GAAS,KACvCC,IAAY,MAAPA,EAAcI,OAAOJ,GAAO,KACjCH,KAAe,MAATA,EAAe,KAAOO,OAAOP,WAEjB,OAAhBC,EAAMC,OAAgC,OAAdD,EAAME,KAA+B,OAAfF,EAAMD,KAC/C,KACFC"}